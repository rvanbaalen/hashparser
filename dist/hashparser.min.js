export default class HashParser{_encoded;constructor({encoded:e=!1,sync:a=!0}={}){this._encoded=e,this._readHash(),a&&window.addEventListener("hashchange",(()=>this._readHash()),!1)}static get encoded(){return new HashParser({encoded:!0})}get encoded(){return new HashParser({encoded:!0})}_encode(e){return btoa(JSON.stringify(e))}_decode(e){return JSON.parse(atob(e))}_readHash(){this.params=new URLSearchParams(window.location.hash.replace(/^#/g,""))}get(e,a){let t=this.params.get(e);return null===t?a:this._encoded?this._decode(t):decodeURIComponent(t)}set(e,a){a=this._encoded?this._encode(a):encodeURIComponent(a),this.params.set(e,a),this.updateHash()}delete(e){this.params.delete(e),this.updateHash()}clear(){this.params=new URLSearchParams,this.updateHash()}has(e){return this.params.has(e)}updateHash(){0!==Array.from(this.params).length?window.location.hash=`#${this.params.toString()}`:window.history.replaceState(null,null,window.location.pathname+window.location.search)}}
//# sourceMappingURL=hashparser.min.js.map